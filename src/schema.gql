# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """Example field (placeholder)"""
  exampleField: Int!
}

type BadHabit {
  id: Int!
  name: String!
}

input CreateBadHabitInput {
  name: String!
}

input CreateDiseaseInput {
  name: String!
}

input CreateProblemInput {
  """problem name"""
  name: String!

  """problem name"""
  problem_type_id: String!
}

input CreateProblemTypeInput {
  """The Name of the problem type"""
  name: String!
}

input CreateTreatmentTypeInput {
  name: String!
}

type Disease {
  """Example field (placeholder)"""
  id: Int!

  """Example field (placeholder)"""
  name: String!
}

type LogoutResponse {
  loggedOut: Boolean!
}

type Mutation {
  createBadHabit(createBadHabitInput: CreateBadHabitInput!): BadHabit!
  createDisease(createDiseaseInput: CreateDiseaseInput!): Disease!
  createProblem(createProblemInput: CreateProblemInput!): Problem!
  createProblemType(createProblemTypeInput: CreateProblemTypeInput!): ProblemType!
  createTreatmentType(createTreatmentTypeInput: CreateTreatmentTypeInput!): TreatmentType!
  geNewTokens: NewTokenResponse!
  logout(userId: Float!): LogoutResponse!
  removeBadHabit(id: Int!): BadHabit!
  removeDisease(id: Int!): Disease!
  removeProblem(id: Int!): Problem!
  removeProblemType(id: Int!): ProblemType!
  removeTreatmentType(id: Int!): TreatmentType!
  reomveUser(id: Int!): Auth!
  signup(signUpInput: SignUpInput!): SignResponse!
  singin(signInInput: SignInInput!): SignResponse!
  updateBadHabit(updateBadHabitInput: UpdateBadHabitInput!): BadHabit!
  updateDisease(updateDiseaseInput: UpdateDiseaseInput!): Disease!
  updateProblem(id: Int!, updateProblemInput: UpdateProblemInput!): Problem!
  updateProblemType(updateProblemTypeInput: UpdateProblemTypeInput!): ProblemType!
  updateTreatmentType(updateTreatmentTypeInput: UpdateTreatmentTypeInput!): TreatmentType!
}

type NewTokenResponse {
  accessToken: String!
  refreshToken: String!
}

type PaginateProblem {
  item_per_page: Int!
  items: [Problem!]!
  page: Int!
  totalPages: Int!
}

type Problem {
  """Problem_type"""
  Problem_type: ProblemType!

  """problem id"""
  id: Int!

  """problem name"""
  name: String!

  """problem_type_id id"""
  problem_type_id: Int!
}

type ProblemType {
  """Example field (placeholder)"""
  id: Int!
  name: String!
}

type Query {
  badHabit(id: Int!): BadHabit!
  badHabits: [BadHabit!]!
  disease(id: Int!): Disease!
  diseases: [Disease!]!
  problem(id: Int!): Problem!
  problemType(id: Int!): ProblemType!
  problemTypes: [ProblemType!]!
  problems(item_per_page: Float, page: Float): PaginateProblem!
  treatmentType(id: Int!): TreatmentType!
  treatmentTypes: [TreatmentType!]!
}

input SignInInput {
  email: String!
  password: String!
}

type SignResponse {
  accessToken: String!
  refreshToken: String!
  user: User!
}

input SignUpInput {
  email: String!
  password: String!
  userName: String!
}

type TreatmentType {
  id: Int!
  name: String!
}

input UpdateBadHabitInput {
  id: Int!
  name: String!
}

input UpdateDiseaseInput {
  id: Int!
  name: String!
}

input UpdateProblemInput {
  name: String!
  problem_type_id: Int!
}

input UpdateProblemTypeInput {
  id: Int!
  name: String!
}

input UpdateTreatmentTypeInput {
  id: Int!
  name: String!
}

type User {
  email: String!
  id: Int!
  userName: String!
}