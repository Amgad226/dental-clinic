# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

enum AppointmentStates {
  registerd
  unregisterd
}

enum AppointmentTypes {
  emergency
  external
  normal
  waiting
}

type BadHabit {
  id: Int!
  name: String!
}

type BookIn {
  created_at: DateTime!
  id: Int!
  price: Int!
  product: Product!
  product_id: Int!
  quantity: Int!
  total_price: Int!
}

type BookOut {
  created_at: DateTime!
  id: Int!
  product: Product!
  product_id: Int!
  quantity: Int!
  total_price: Int!
}

type Category {
  """id field (placeholder)"""
  id: Int!

  """name field (placeholder)"""
  name: String!
}

type ChemicalMaterial {
  """conflicts of ChemicalMaterial field """
  conflicts: [ChemicalMaterial!]

  """Example field (placeholder)"""
  id: Int!

  """Example field (placeholder)"""
  name: String!
}

input CreateBadHabitInput {
  chemical_material_id: [Int!]
  name: String!
}

input CreateBookInInput {
  created_at: DateTime
  expiration_date: DateTime!
  price: Int!
  product_id: Int!
  quantity: Int!
}

input CreateBookOutInput {
  created_at: DateTime
  product_id: Int!
  quantity: Int!
  stored_prduct_id: [Int!]!
}

input CreateCategoryInput {
  """name field (placeholder)"""
  name: String!
}

input CreateChemicalMaterialInput {
  """chemical_material_id field """
  chemical_material_id: [Int!]

  """Chemical Material Name """
  name: String!
}

input CreateDiseaseInput {
  chemical_material_id: [Int!]
  name: String!
}

input CreateMedicineInput {
  category_id: Int!

  """chemical_material_id field """
  chemical_material_id: [Int!]!

  """concentration field """
  concentration: Float!

  """name field """
  name: String!
}

input CreatePatientAppointmentInput {
  """appointment date"""
  date: DateTime!

  """notes"""
  notes: String

  """Patient id"""
  patient_id: Int!

  """phase"""
  phase: String

  """treatment place"""
  place: String

  """reservation"""
  reservation_id: Int

  """AppointmentTypes"""
  type: AppointmentTypes!
}

input CreatePatientBadHabitForExistingPatientInput {
  bad_habet_id: Int!
  notes: String
  patient_id: Int!
  start_date: DateTime
}

input CreatePatientBadHabitInput {
  bad_habet_id: Int!
  notes: String
  start_date: DateTime
}

input CreatePatientCostInput {
  amount: Float!
  date: DateTime!
  description: String
  patient_id: Int!
  treatment_id: Int
}

input CreatePatientDiagnosisInput {
  expected_treatment: String
  patient_id: Int!
  place: String!
  problem_id: Int!
}

input CreatePatientDiseaseForExistingPatientInput {
  disease_id: Int!
  notes: String
  patient_id: Int!
  start_date: DateTime
  tight: Boolean!
}

input CreatePatientDiseaseInput {
  disease_id: Int!
  notes: String
  start_date: DateTime
  tight: Boolean!
}

input CreatePatientInput {
  address: String
  birth_date: DateTime
  gender: String!
  job: String
  main_complaint: String
  maintal_status: String
  name: String!
  patient_badHabits: [CreatePatientBadHabitInput!]
  patient_diseases: [CreatePatientDiseaseInput!]
  patient_medicines: [CreatePatientMedicineInput!]
  phone: String
}

input CreatePatientLabOrderInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreatePatientMedicalImageInput {
  image: Upload!
  medical_image_type_id: Int!
  patient_id: Int!
  title: String!
}

input CreatePatientMedicalImagesTypeInput {
  name: String!
}

input CreatePatientMedicineForExistingPatientInput {
  medicine_id: Int!
  notes: String
  patient_id: Int!
  start_date: DateTime
}

input CreatePatientMedicineInput {
  medicine_id: Int!
  notes: String
  start_date: DateTime
}

input CreatePatientPaymentInput {
  amount: Float!
  date: DateTime!
  description: String
  patient_id: Int!
}

input CreatePatientPerscrptionInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreatePatientPerscrptionsMedicienInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreatePatientReservationInput {
  date: DateTime!
  notes: String
  patient_id: Int!
}

input CreatePatientSessionInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreatePatientTeethTreatmentInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreatePatientTreatmentInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateProblemInput {
  name: String!
  problem_type_id: Int!
}

input CreateProblemTypeInput {
  """The Name of the problem type"""
  name: String!
}

input CreateProductInput {
  name: String!
}

input CreateStepInput {
  name: String!
  subSteps: [CreateSubStepInput!]
}

input CreateSubStepInput {
  name: String!
}

input CreateTreatmentInput {
  color: String!
  name: String!
  price: Float!
  steps: [CreateStepInput!]
  treatment_type_id: Int!
}

input CreateTreatmentTypeInput {
  name: String!
}

input CreateWorkingHourInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Disease {
  id: Int!
  name: String!
}

enum Gender {
  female
  male
}

type Medicine {
  """category"""
  category: Category

  """chemical_material_id field """
  category_id: Int!

  """concentration field """
  concentration: Float!

  """id field """
  id: Int!

  """Problem_type"""
  medicineChemicalMaterials: [MedicineChemicalMaterials!]

  """name field """
  name: String!
}

type MedicineChemicalMaterials {
  """chemical_material"""
  chemical_material: ChemicalMaterial

  """concentration field """
  chemical_material_id: Int!

  """id field """
  id: Int!

  """chemical_material_id field """
  medicine_id: Int!
}

type Mutation {
  createBadHabit(createBadHabitInput: CreateBadHabitInput!): BadHabit!
  createBookIn(createBookInInput: CreateBookInInput!): BookIn!
  createBookOut(createBookOutInput: CreateBookOutInput!): BookOut!
  createCategory(createCategoryInput: CreateCategoryInput!): Category!
  createChemicalMaterial(createChemicalMaterialInput: CreateChemicalMaterialInput!): ChemicalMaterial!
  createDisease(createDiseaseInput: CreateDiseaseInput!): Disease!
  createMedicine(createMedicineInput: CreateMedicineInput!): Medicine!
  createPatient(createPatientInput: CreatePatientInput!): Patient!
  createPatientAppointment(createPatientAppointmentInput: CreatePatientAppointmentInput!): PatientAppointment!
  createPatientBadHabit(createPatientBadHabitInput: CreatePatientBadHabitForExistingPatientInput!): PatientBadHabit!
  createPatientCost(createPatientCostInput: CreatePatientCostInput!): PatientCost!
  createPatientDiagnosis(createPatientDiagnosisInput: CreatePatientDiagnosisInput!): PatientDiagnosis!
  createPatientDisease(createPatientDiseaseInput: CreatePatientDiseaseForExistingPatientInput!): PatientDisease!
  createPatientLabOrder(createPatientLabOrderInput: CreatePatientLabOrderInput!): PatientLabOrder!
  createPatientMedicalImage(createPatientMedicalImageInput: CreatePatientMedicalImageInput!): PatientMedicalImage!
  createPatientMedicalImagesType(createPatientMedicalImagesTypeInput: CreatePatientMedicalImagesTypeInput!): PatientMedicalImagesType!
  createPatientMedicine(createPatientMedicineInput: CreatePatientMedicineForExistingPatientInput!): PatientMedicine!
  createPatientPayment(createPatientPaymentInput: CreatePatientPaymentInput!): PatientPayment!
  createPatientPerscrption(createPatientPerscrptionInput: CreatePatientPerscrptionInput!): PatientPerscrption!
  createPatientPerscrptionsMedicien(createPatientPerscrptionsMedicienInput: CreatePatientPerscrptionsMedicienInput!): PatientPerscrptionsMedicien!
  createPatientReservation(createPatientReservationInput: CreatePatientReservationInput!): PatientReservation!
  createPatientSession(createPatientSessionInput: CreatePatientSessionInput!): PatientSession!
  createPatientTeethTreatment(createPatientTeethTreatmentInput: CreatePatientTeethTreatmentInput!): PatientTeethTreatment!
  createPatientTreatment(createPatientTreatmentInput: CreatePatientTreatmentInput!): PatientTreatment!
  createProblem(createProblemInput: CreateProblemInput!): Problem!
  createProblemType(createProblemTypeInput: CreateProblemTypeInput!): ProblemType!
  createProduct(createProductInput: CreateProductInput!): Product!
  createTreatment(createTreatmentInput: CreateTreatmentInput!): Treatment!
  createTreatmentType(createTreatmentTypeInput: CreateTreatmentTypeInput!): TreatmentType!
  createWorkingHour(createWorkingHourInput: CreateWorkingHourInput!): WorkingHour!
  removeBadHabit(id: Int!): BadHabit!
  removeCategory(id: Int!): Category!
  removeChemicalMaterial(id: Int!): ChemicalMaterial!
  removeDisease(id: Int!): Disease!
  removeMedicine(id: Int!): Medicine!
  removePatient(id: Int!): Patient!
  removePatientAppointment(id: Int!): PatientAppointment!
  removePatientBadHabit(id: Int!): PatientBadHabit!
  removePatientCost(id: Int!): PatientCost!
  removePatientDiagnosis(id: Int!): PatientDiagnosis!
  removePatientDisease(id: Int!): PatientDisease!
  removePatientLabOrder(id: Int!): PatientLabOrder!
  removePatientMedicalImage(id: Int!): PatientMedicalImage!
  removePatientMedicalImagesType(id: Int!): PatientMedicalImagesType!
  removePatientMedicine(id: Int!): PatientMedicine!
  removePatientPayment(id: Int!): PatientPayment!
  removePatientPerscrption(id: Int!): PatientPerscrption!
  removePatientPerscrptionsMedicien(id: Int!): PatientPerscrptionsMedicien!
  removePatientReservation(id: Int!): PatientReservation!
  removePatientSession(id: Int!): PatientSession!
  removePatientTeethTreatment(id: Int!): PatientTeethTreatment!
  removePatientTreatment(id: Int!): PatientTreatment!
  removeProblem(id: Int!): Problem!
  removeProblemType(id: Int!): ProblemType!
  removeProduct(id: Int!): Product!
  removeStoredProduct(id: Int!): StoredProduct!
  removeTreatment(id: Int!): Treatment!
  removeTreatmentType(id: Int!): TreatmentType!
  removeWorkingHour(id: Int!): WorkingHour!
  updateBadHabit(id: Int!, updateBadHabitInput: UpdateBadHabitInput!): BadHabit!
  updateChemicalMaterial(id: Int!, updateChemicalMaterialInput: UpdateChemicalMaterialInput!): ChemicalMaterial!
  updateDisease(id: Int!, updateDiseaseInput: UpdateDiseaseInput!): Disease!
  updateMedicine(id: Float!, updateMedicineInput: UpdateMedicineInput!): Medicine!
  updatePatient(updatePatientInput: UpdatePatientInput!): Patient!
  updatePatientAppointment(updatePatientAppointmentInput: UpdatePatientAppointmentInput!): PatientAppointment!
  updatePatientBadHabit(updatePatientBadHabitInput: UpdatePatientBadHabitInput!): PatientBadHabit!
  updatePatientCost(updatePatientCostInput: UpdatePatientCostInput!): PatientCost!
  updatePatientDiagnosis(updatePatientDiagnoseInput: UpdatePatientDiagnosisInput!): PatientDiagnosis!
  updatePatientDisease(updatePatientDiseaseInput: UpdatePatientDiseaseInput!): PatientDisease!
  updatePatientLabOrder(updatePatientLabOrderInput: UpdatePatientLabOrderInput!): PatientLabOrder!
  updatePatientMedicalImage(updatePatientMedicalImageInput: UpdatePatientMedicalImageInput!): PatientMedicalImage!
  updatePatientMedicalImagesType(updatePatientMedicalImagesTypeInput: UpdatePatientMedicalImagesTypeInput!): PatientMedicalImagesType!
  updatePatientMedicine(updatePatientMedicineInput: UpdatePatientMedicineInput!): PatientMedicine!
  updatePatientPayment(updatePatientPaymentInput: UpdatePatientPaymentInput!): PatientPayment!
  updatePatientPerscrption(updatePatientPerscrptionInput: UpdatePatientPerscrptionInput!): PatientPerscrption!
  updatePatientPerscrptionsMedicien(updatePatientPerscrptionsMedicienInput: UpdatePatientPerscrptionsMedicienInput!): PatientPerscrptionsMedicien!
  updatePatientSession(updatePatientSessionInput: UpdatePatientSessionInput!): PatientSession!
  updatePatientTeethTreatment(updatePatientTeethTreatmentInput: UpdatePatientTeethTreatmentInput!): PatientTeethTreatment!
  updatePatientTreatment(updatePatientTreatmentInput: UpdatePatientTreatmentInput!): PatientTreatment!
  updateProblem(id: Int!, updateProblemInput: UpdateProblemInput!): Problem!
  updateProblemType(id: Int!, updateProblemTypeInput: UpdateProblemTypeInput!): ProblemType!
  updateProduct(id: Int!, updateProductInput: UpdateProductInput!): Product!
  updateTreatment(id: Int!, updateTreatmentInput: UpdateTreatmentInput!): Treatment!
  updateTreatmentType(id: Int!, updateTreatmentTypeInput: UpdateTreatmentTypeInput!): TreatmentType!
  updateWorkingHour(updateWorkingHourInput: UpdateWorkingHourInput!): WorkingHour!
}

type PaginateChemicalMaterial {
  item_per_page: Int!
  items: [ChemicalMaterial!]
  page: Int!
  totalPages: Int!
}

type PaginateProblem {
  item_per_page: Int!
  items: [Problem!]
  page: Int!
  totalPages: Int!
}

type Paginatebadhabit {
  item_per_page: Int!
  items: [BadHabit!]
  page: Int!
  totalPages: Int!
}

type Paginatebookin {
  item_per_page: Int!
  items: [BookIn!]
  page: Int!
  totalPages: Int!
}

type PaginatedPatient {
  item_per_page: Int!
  items: [Patient!]
  page: Int!
  totalPages: Int!
}

type PaginatedPatientCost {
  item_per_page: Int!
  items: [PatientCost!]
  page: Int!
  totalPages: Int!
}

type PaginatedPatientDiagnosis {
  item_per_page: Int!
  items: [PatientDiagnosis!]
  page: Int!
  totalPages: Int!
}

type PaginatedPatientPayment {
  item_per_page: Int!
  items: [PatientPayment!]
  page: Int!
  totalPages: Int!
}

type Paginatedisease {
  item_per_page: Int!
  items: [Disease!]
  page: Int!
  totalPages: Int!
}

type Paginateproduct {
  item_per_page: Int!
  items: [Product!]
  page: Int!
  totalPages: Int!
}

input PateintPaymentSortInput {
  field: String!
  order: String!
}

type Patient {
  PatientBadHabet: [PatientBadHabit!]
  PatientCost: [PatientCost!]
  PatientDiagnose: [PatientDiagnosis!]
  PatientDisease: [PatientDisease!]
  PatientMedicine: [PatientMedicine!]
  PatientPayment: [PatientPayment!]
  PatientTeethTreatment: [PatientTeethTreatment!]
  address: String
  birth_date: DateTime
  gender: Gender!
  id: Int!
  job: String
  main_complaint: String
  maintal_status: String
  name: String!
  phone: String
}

type PatientAppointment {
  """notes"""
  PatientSession: [PatientSession!]

  """appointment date"""
  date: DateTime!

  """id"""
  id: Int!

  """notes"""
  notes: String

  """patient"""
  patient: Patient!

  """Patient id"""
  patient_id: Int!

  """phase"""
  phase: String

  """treatment place"""
  place: String

  """AppointmentStates"""
  state: AppointmentStates!

  """AppointmentTypes"""
  type: AppointmentTypes!
}

type PatientBadHabit {
  bad_habet: BadHabit!
  bad_habet_id: Int!
  id: Int!
  notes: String
  patient_id: Int!
  start_date: DateTime
}

type PatientCost {
  amount: Float!
  date: DateTime!
  description: String
  id: Int!
  patient: Patient!
  patient_id: Int!
  treatment: Treatment
  treatment_id: Int
}

input PatientCostSortInput {
  field: String!
  order: String!
}

type PatientDiagnosis {
  expected_treatment: String
  id: Int!
  patient_id: Int!
  place: String!
  problem: Problem!
  problem_id: Int!
}

type PatientDisease {
  disease: Disease!
  disease_id: Int!
  id: Int!
  notes: String
  patient_id: Int!
  start_date: DateTime
  tight: Boolean!
}

type PatientLabOrder {
  """Example field (placeholder)"""
  exampleField: Int!
}

type PatientMedicalImage {
  created_at: DateTime!
  id: Int
  imageType: PatientMedicalImagesType
  medical_image_type_id: Int!
  patient: Patient!
  patient_id: Int!
  src: String!
  title: String!
}

type PatientMedicalImagesType {
  PatientMedicalImage: [PatientMedicalImage!]
  id: Int!
  name: String!
}

type PatientMedicine {
  id: Int!
  medicine: Medicine!
  medicine_id: Int!
  notes: String
  patient_id: Int!
  start_date: DateTime
}

type PatientPayment {
  Patient: Patient!
  amount: Float!
  date: DateTime!
  description: String
  id: Int!
  patient_id: Int!
}

type PatientPerscrption {
  """Example field (placeholder)"""
  exampleField: Int!
}

type PatientPerscrptionsMedicien {
  """Example field (placeholder)"""
  exampleField: Int!
}

type PatientReservation {
  date: DateTime!
  id: Int!
  notes: String
  patient: Patient!
  patient_id: Int!
}

type PatientSession {
  """Example field (placeholder)"""
  exampleField: Int!
}

type PatientTeethTreatment {
  """Example field (placeholder)"""
  exampleField: Int!
}

type PatientTreatment {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Problem {
  """Problem_type"""
  Problem_type: ProblemType!

  """problem id"""
  id: Int!

  """problem name"""
  name: String!

  """problem_type_id id"""
  problem_type_id: Int!
}

type ProblemType {
  """Example field (placeholder)"""
  id: Int!
  name: String!
}

type Product {
  id: Int!
  name: String!
}

type Query {
  badHabit(id: Int!): BadHabit!
  badHabits(item_per_page: Float, page: Float, search: String): Paginatebadhabit!
  bookIn(id: Int!): BookIn!
  bookIns(item_per_page: Float, page: Float, search: String): Paginatebookin!
  bookOut(id: Int!): BookOut!
  categories: [Category!]!
  chemicalMaterial(id: Int!): ChemicalMaterial!
  chemicalMaterials(item_per_page: Float, page: Float, search: String): PaginateChemicalMaterial!
  disease(id: Int!): Disease!
  diseases(item_per_page: Float, page: Float, search: String): Paginatedisease!
  medicine(id: Int!): Medicine!
  medicines(item_per_page: Float, page: Float, search: String): paginateMedicine!
  patient(id: Int!): Patient!
  patientAppointment(id: Int!): PatientAppointment!
  patientAppointments(date: DateTime): [PatientAppointment!]!
  patientBadHabits(patient_id: Int!): [PatientBadHabit!]!
  patientCosts(item_per_page: Float, page: Float, patient_id: Int, sort: PatientCostSortInput): PaginatedPatientCost!
  patientDiagnose(id: Int!): PatientDiagnosis!
  patientDiagnoses(item_per_page: Float, page: Float, patient_id: Float, problem_type_id: Float): PaginatedPatientDiagnosis!
  patientDiseases(patient_id: Int!): [PatientDisease!]!
  patientLabOrder(id: Int!): PatientLabOrder!
  patientLabOrders: [PatientLabOrder!]!
  patientMedicalImages(medical_image_type_id: Int, patient_id: Int): [PatientMedicalImage!]!
  patientMedicalImagesType(id: Int!): PatientMedicalImagesType!
  patientMedicalImagesTypes: [PatientMedicalImagesType!]!
  patientMedicines(patient_id: Int!): [PatientMedicine!]!
  patientPayments(item_per_page: Float, page: Float, patient_id: Int, sort: PateintPaymentSortInput): PaginatedPatientPayment!
  patientPerscrption(id: Int!): PatientPerscrption!
  patientPerscrptions: [PatientPerscrption!]!
  patientPerscrptionsMedicien(id: Int!): PatientPerscrptionsMedicien!
  patientPerscrptionsMediciens: [PatientPerscrptionsMedicien!]!
  patientReservations(patient_id: Int): [PatientReservation!]!
  patientSession(id: Int!): PatientSession!
  patientSessions: [PatientSession!]!
  patientTeethTreatment(id: Int!): PatientTeethTreatment!
  patientTeethTreatments: [PatientTeethTreatment!]!
  patientTreatment(id: Int!): PatientTreatment!
  patientTreatments: [PatientTreatment!]!
  patients(item_per_page: Float, page: Float): PaginatedPatient!
  problem(id: Int!): Problem!
  problemType(id: Int!): ProblemType!
  problemTypes: [ProblemType!]!
  problems(item_per_page: Float, page: Float, search: String): PaginateProblem!
  product(id: Int!): Product!
  products(item_per_page: Float, page: Float, search: String): Paginateproduct!
  selectStoredProduct(id: Int!): [StoredProduct!]!
  storedProducts: [StoredProduct!]!
  treatment(id: Int!): Treatment!
  treatmentType(id: Int!): TreatmentType!
  treatmentTypes: [TreatmentType!]!
  treatments(item_per_page: Float, page: Float, search: String): paginateTreatment!
  workingHour(id: Int!): WorkingHour!
  workingHours: [WorkingHour!]!
}

type Steps {
  name: String!
  subSteps: [SubStep!]
  treatment_id: Int!
}

type StoredProduct {
  expiration_date: DateTime!
  id: Int!
  price: Int!
  product: Product!
  product_id: Int!
  quantity: Int!
  total_quantity: Int!
}

type SubStep {
  name: String!
  step_id: Int!
}

type Treatment {
  color: String!
  id: Int!
  name: String!
  price: Float!
  steps: [Steps!]
  treatment_type: TreatmentType!
  treatment_type_id: Int!
}

type TreatmentType {
  id: Int!
  name: String!
}

input UpdateBadHabitInput {
  chemical_material_id: [Int!]
  name: String!
}

input UpdateChemicalMaterialInput {
  """chemical_material_id field """
  chemical_material_id: [Int!]

  """Chemical Material"""
  name: String
}

input UpdateDiseaseInput {
  chemical_material_id: [Int!]
  name: String!
}

input UpdateMedicineInput {
  """chemical_material_id field """
  category_id: Int!

  """chemical_material_id field """
  chemical_material_id: [Int!]!

  """concentration field """
  concentration: Int!

  """name field """
  name: String!
}

input UpdatePatientAppointmentInput {
  """appointment date"""
  date: DateTime
  id: Int!

  """notes"""
  notes: String

  """Patient id"""
  patient_id: Int

  """phase"""
  phase: String

  """treatment place"""
  place: String

  """reservation"""
  reservation_id: Int

  """AppointmentTypes"""
  type: AppointmentTypes
}

input UpdatePatientBadHabitInput {
  bad_habet_id: Int
  id: Int!
  notes: String
  start_date: DateTime
}

input UpdatePatientCostInput {
  amount: Float
  date: DateTime
  description: String
  id: Int!
  patient_id: Int
  treatment_id: Int
}

input UpdatePatientDiagnosisInput {
  expected_treatment: String
  id: Int!
  patient_id: Int
  place: String
  problem_id: Int
}

input UpdatePatientDiseaseInput {
  disease_id: Int
  id: Int!
  notes: String
  patient_id: Int
  start_date: DateTime
  tight: Boolean
}

input UpdatePatientInput {
  address: String
  birth_date: DateTime
  gender: String
  id: Int!
  job: String
  main_complaint: String
  maintal_status: String
  name: String
  phone: String
}

input UpdatePatientLabOrderInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdatePatientMedicalImageInput {
  id: Int!
  image: Upload
  medical_image_type_id: Int
  patient_id: Int
  title: String
}

input UpdatePatientMedicalImagesTypeInput {
  id: Int!
  name: String
}

input UpdatePatientMedicineInput {
  id: Int!
  medicine_id: Int
  notes: String
  patient_id: Int
  start_date: DateTime
}

input UpdatePatientPaymentInput {
  amount: Float
  date: DateTime
  description: String
  id: Int!
  patient_id: Int
}

input UpdatePatientPerscrptionInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdatePatientPerscrptionsMedicienInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdatePatientSessionInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdatePatientTeethTreatmentInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdatePatientTreatmentInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateProblemInput {
  name: String!
  problem_type_id: Int!
}

input UpdateProblemTypeInput {
  name: String!
}

input UpdateProductInput {
  name: String!
}

input UpdateStepInput {
  name: String!
  subSteps: [UpdateSubStepInput!]
}

input UpdateSubStepInput {
  name: String!
}

input UpdateTreatmentInput {
  color: String
  name: String!
  price: Float!
  steps: [UpdateStepInput!]
  treatment_type_id: Int!
}

input UpdateTreatmentTypeInput {
  name: String!
}

input UpdateWorkingHourInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type WorkingHour {
  """Example field (placeholder)"""
  exampleField: Int!
}

type paginateMedicine {
  item_per_page: Int!
  items: [Medicine!]
  page: Int!
  totalPages: Int!
}

type paginateTreatment {
  item_per_page: Int!
  items: [Treatment!]
  page: Int!
  totalPages: Int!
}